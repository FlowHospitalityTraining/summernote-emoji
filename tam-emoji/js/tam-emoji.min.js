!function(e){if("function"===typeof define&&define.amd)define(["jquery"],e)
else if("object"===typeof module&&module.exports)module.exports=e(require("jquery"))
else e(window.jQuery)}(function(e){e.extend(e.summernote.plugins,{emoji:function(i){var t,n,o,s,a,r=this,l=27,c=9,m=e.summernote.ui,f=i.$note[0].id
    if(!Array.prototype.filter)Array.prototype.filter=function(e){var i,t,n,o,s=this.length>>>0
        if("function"!=typeof e)throw new TypeError
        i=[]
        t=arguments[1]
        for(n=0;n<s;n++)if(n in this){o=this[n]
            if(e.call(t,o,n,this))i.push(o)}return i}
    t=function(){var t=e("body")
        t.on("keydown",function(e){if(e.keyCode===l||e.keyCode===c)r.$panel.hide()})
        t.on("mouseup",function(i){i=i.originalEvent||i
            var t=i.target||window
            if(e(t).hasClass("emoji-picker")||e(t).hasClass("emoji-menu-tab"))return
            r.$panel.hide()})
        t.on("click","."+f+" .emoji-menu-tab",function(i){var t,n
            i.stopPropagation()
            i.preventDefault()
            t=0
            n=e(this).attr("class").split(" ")
            n=n[1].split("-")
            if(3===n.length)return
            n=n[0]+"-"+n[1]
            e("."+f+" .emoji-menu-tabs td").each(function(i){var o=e(this).find("a"),s=o.attr("class").split(" ")
                s=s[1].split("-")
                s=s[0]+"-"+s[1]
                if(n===s){o.attr("class","emoji-menu-tab "+s+"-selected")
                    t=i}else o.attr("class","emoji-menu-tab "+s)})
            o(t)})
        e(document).on("click","."+f+" .emoji-items a",function(){var t,n=e(".label",e(this)).text()
            if("unicode"===document.emojiType)i.invoke("editor.insertText",a(n))
            else{t=e(s(r.icons[n]))
                if(t[0].attachEvent)t[0].attachEvent("onresizestart",function(e){e.returnValue=false},false)
                i.invoke("editor.insertNode",t[0])}ConfigStorage.get("emojis_recent",function(e){e=e||Config.defaultRecentEmojis||[]
                var i=e.indexOf(n)
                if(!i)return false
                if(-1!==i)e.splice(i,1)
                e.unshift(n)
                if(e.length>42)e=e.slice(42)
                ConfigStorage.set({emojis_recent:e})})})}
    n=function(){var e,i,t,n,o,s,a,l,c,m
        n=void 0
        s=void 0
        t=void 0
        o={}
        l={}
        a=void 0
        i=void 0
        c=void 0
        e=void 0
        m=void 0
        s=0
        while(s<Config.EmojiCategories.length){m=Config.EmojiCategorySpritesheetDimens[s][1]
            n=0
            while(n<Config.EmojiCategories[s].length){i=Config.Emoji[Config.EmojiCategories[s][n]]
                a=i[1][0]
                c=Math.floor(n/m)
                e=n%m
                o[":"+a+":"]=[s,c,e,":"+a+":"]
                l[a]=i[0]
                n++}s++}r.icons=o
        r.reverseIcons=l
        if(!Config.rx_codes)Config.init_unified()}
    o=function(i){var t=e("."+f+" .emoji-items")
        t.html("")
        if(i>0)e.each(r.icons,function(e,n){if(r.icons.hasOwnProperty(e)&&n[0]===i-1)t.append('<a href="javascript:void(0)" title="'+Config.htmlEntities(e)+'">'+s(n,true)+'<span class="label">'+Config.htmlEntities(e)+"</span></a>")})
        else ConfigStorage.get("emojis_recent",function(e){e=e||Config.defaultRecentEmojis||[]
            var i,n
            for(n=0;n<e.length;n++){i=e[n]
                if(r.icons[i])t.append('<a href="javascript:void(0)" title="'+Config.htmlEntities(i)+'">'+s(r.icons[i],true)+'<span class="label">'+Config.htmlEntities(i)+"</span></a>")}})}
    s=function(e){var i=e[0],t=e[1],n=e[2],o=e[3],s=document.emojiSource+"/emoji_spritesheet_!.png",a=document.emojiSource+"/blank.gif",r=25,l=-(r*n),c=-(r*t),m=Config.EmojiCategorySpritesheetDimens[i][1]*r,f=Config.EmojiCategorySpritesheetDimens[i][0]*r,u="display:inline-block;"
        u+="width:"+r+"px;"
        u+="height:"+r+"px;"
        u+="background:url('"+s.replace("!",i)+"') "+l+"px "+c+"px no-repeat;"
        u+="background-size:"+m+"px "+f+"px;"
        return'<img src="'+a+'" class="img" style="'+u+'" alt="'+Config.htmlEntities(o)+'">'}
    a=function(e){return e.replace(Config.rx_colons,function(e){var i
        i=Config.mapcolon[e]
        if(i)return i
        else return""})}
    i.memo("button.emoji",function(){var e=m.button({contents:'<i class="fa fa-smile-o emoji-picker-container emoji-picker"></i>',click:function(){if(void 0===document.emojiSource)document.emojiSource=""
        if(void 0===document.emojiType)document.emojiType=""
        var e=r.$panel.width()
        if(e>r.$panel.position().left)r.$panel.css({left:"0",top:"100%"})
        r.$panel.show()}})
        r.emoji=e.render()
        return r.emoji})
    this.events={"summernote.init":function(e,i){t()}}
    this.initialize=function(){this.$panel=e('<div class="emoji-menu '+f+'">\n    <div class="emoji-items-wrap1">\n        <table class="emoji-menu-tabs">\n            <tbody>\n            <tr>\n                <td><a class="emoji-menu-tab icon-recent-selected"></a></td>\n                <td><a class="emoji-menu-tab icon-smile"></a></td>\n                <td><a class="emoji-menu-tab icon-flower"></a></td>\n                <td><a class="emoji-menu-tab icon-bell"></a></td>\n                <td><a class="emoji-menu-tab icon-car"></a></td>\n                <td><a class="emoji-menu-tab icon-grid"></a></td>\n            </tr>\n            </tbody>\n        </table>\n        <div class="emoji-items-wrap mobile_scrollable_wrap">\n            <div class="emoji-items"></div>\n        </div>\n    </div>\n</div>').hide()
        this.$panel.appendTo(this.emoji.parent())
        n()
        o(0)}
    this.destroy=function(){this.$panel.remove()
        this.$panel=null}}})})
